"""
Django settings for ybblog project.

Generated by 'django-admin startproject' using Django 2.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

#Burası Sunucu ayarlarımız, gerekli dosyaların adresleri gibi şeylerin yazıl oldugu yer

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ayq3p^@145$p11%2lwrzvty+$mk*-hja47%o3$p@yp$+g12ae('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
#bu insalled_apps djangonun hazır dosyalarıdır, içindekilere bakabilir, yuklenmesini istemedigini silebilirsin, yada ekleyebilirsin.
#ileride kendi uygulamalarımızı yazınca buradan onları hazır olarak dahil edebiliiz
#adresileridir aynı zamanda gidip incelebilirsin
#bu fonksiyonların hazır tablo yapıları vardır,bunları bilgiden bak

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles', #bunun bulundugundan emin ol cssler için resimler için
    'ckeditor',
    'article', # bu şekilde bu proje içinde oluşturmuş olduğumuz appleri ekleriz
    'user',
    'crispy_forms', # htmllerde formların guzel gozukmesı için 
    'django_cleanup', # dosyaları makale silinince otomatik silmeye yarar
]
# user sayfasını buraya tanıtmama sebebimiz hali hazırda gelen auth sınıfını kullanıyor olmamızdan dolayı,yeni modeller oluşturusak  buraya dememiz laızım
# yeni uygulama oluşturunca  uygulamayi oluşturdugunu soylemeyi unutma !!!!!!!!!
# Oluşturdugumuz uygulamalarda herhangi bir model oluşturmuyorsak soylememize gerek yok migrate komutu bu app'deki modelleri veri tabanına işler

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ybblog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["Templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media', # formu gonderince baska dosyada gostermek için gerekliymiş
            ],
        },
    },
]

WSGI_APPLICATION = 'ybblog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

#veri tabanını hazır olarak sqlite3 olarak alır, bunu mysql falan kullanmak istersek değiştiririzs
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'tr' # dilimiz

TIME_ZONE = 'Europe/Istanbul' # türkiye saaatine ayarla

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

# bu static url static dosyaları js resimler yada css dosylarının bulundugu konum, bunun için uygulamalarda
#disturb.staticfiles kesin bulunması lazım
STATIC_URL = '/static/'
 
# assagıdaki bildiriyi yapmassa django static dosyaları için sadece applere bakıcak, ama onu yapınca django 
#pc'den dizinin adresini alıp ana dızıne baktırıyor

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles") # burada butun genel static dosyalarımız bulunacagı klasöru işaret ettik , servera yuklerden
#artik django buradan veri çekicek

CRISPY_TEMPLATE_PACK = 'bootstrap4' # burada css dosyalarında ne kullanıcagımız soyledik

CKEDITOR_CONFIGS = {
    "default": {
        "removePlugins": "stylesheetparser",
        "allowedContent":True, # her ihtimale karsı sorun çıkmasın diye ekleme yaptık
        "width":"100%", # css verileride verebiliriz
    }
} #ck editor için gerekli bu sonradan eklediğimiz classlar falan gitmesin diye

MEDIA_URL = '/media/' # bursaıda kayit dosyası
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') # BURASI bize gelen dosyaların kayit edileceği yer'i soyledik

